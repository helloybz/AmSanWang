{"version":3,"sources":["components/AnswerBoxWrapper/AnswerBoxWrapper.js","components/FormulaWrapper/FormulaWrapper.js","containers/AnswerBoxContainer/AnswerBoxContainer.js","containers/FormulaContainer/FormulaContainer.js","App.js","reportWebVitals.js","index.js"],"names":["AnswerBoxWrapper","answer","Grid","container","className","item","xs","Input","value","FormulaWrapper","formula","AnswerBoxContainer","useState","FormulaContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAceA,MAVf,YAAuC,IAAXC,EAAU,EAAVA,OACxB,OACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,mBAA1B,SACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CAAOC,MAAOP,S,MCMfQ,MAVf,YAAsC,IAAZC,EAAW,EAAXA,QACtB,OACI,cAACR,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,iBAA1B,SACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACKI,OCMFC,MAXf,WACI,MAA4BC,mBAAS,IAArC,mBAAOX,EAAP,KAEA,OAFA,KAGI,cAAC,EAAD,CACIA,OAAQA,KCMLY,MAXf,WACI,MAA8BD,mBAAS,OAAvC,mBAAOF,EAAP,KAEA,OAFA,KAGI,cAAC,EAAD,CACIA,QAASA,KCSNI,MAbf,WACE,OACE,eAACZ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OAA1B,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,EAAD,MAEF,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,EAAD,UCCOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cc3d7576.chunk.js","sourcesContent":["import { Grid, Input } from \"@mui/material\";\n\nimport \"./AnswerBoxWrapper.css\"\n\nfunction AnswerBoxWrapper({ answer }) {\n    return (\n        <Grid container className=\"AnswerBoxWrapper\">\n            <Grid item xs={12}>\n                <Input value={answer} />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default AnswerBoxWrapper;","import { Grid } from \"@mui/material\";\n\nimport \"./FormulaWrapper.css\"\n\nfunction FormulaWrapper({ formula }) {\n    return (\n        <Grid container className=\"FormulaWrapper\">\n            <Grid item xs={12}>\n                {formula}\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default FormulaWrapper;","import { useState } from \"react\";\nimport { AnswerBoxWrapper } from \"../../components\";\n\nfunction AnswerBoxContainer() {\n    const [answer, setAnswer] = useState(\"\")\n\n    return (\n        <AnswerBoxWrapper\n            answer={answer}\n        >\n        </AnswerBoxWrapper>\n    );\n}\n\nexport default AnswerBoxContainer;","import { useState } from \"react\";\nimport { FormulaWrapper } from \"../../components\";\n\nfunction FormulaContainer() {\n    const [formula, setFormula] = useState(\"2+3\")\n\n    return (\n        <FormulaWrapper\n            formula={formula}\n        >\n        </FormulaWrapper>\n    );\n}\n\nexport default FormulaContainer;","import { Grid } from \"@mui/material\";\n\nimport { AnswerBoxContainer, FormulaContainer } from \"./containers\"\n\nfunction App() {\n  return (\n    <Grid container className=\"Body\">\n      <Grid item xs={12}>\n        <FormulaContainer />\n      </Grid>\n      <Grid item xs={12}>\n        <AnswerBoxContainer />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}